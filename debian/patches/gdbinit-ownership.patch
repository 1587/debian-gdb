This patch was not popular upstream; there was no fundamental objection, but
several problems with the implementation.  It needs to be revisited.

---
 gdb/cli/cli-cmds.c |   43 +++++++++++++++++++++++++++++++++++++++----
 gdb/main.c         |    4 ++--
 2 files changed, 41 insertions(+), 6 deletions(-)

Index: gdb-6.8.50.20081120.python/gdb/cli/cli-cmds.c
===================================================================
--- gdb-6.8.50.20081120.python.orig/gdb/cli/cli-cmds.c	2008-11-25 16:16:41.000000000 -0500
+++ gdb-6.8.50.20081120.python/gdb/cli/cli-cmds.c	2008-11-27 16:58:08.000000000 -0500
@@ -36,6 +36,7 @@
 #include "objfiles.h"
 #include "source.h"
 #include "disasm.h"
+#include "gdb_stat.h"
 
 #include "ui-out.h"
 
@@ -433,6 +434,10 @@ cd_command (char *dir, int from_tty)
     pwd_command ((char *) 0, 1);
 }
 
+/* Load a GDB command file whose name is given in ARGS.  FROM_TTY may
+   be -1, in which case we are loading a gdbinit file; in that case,
+   be paranoid about unsafe files.  */
+
 void
 source_script (char *file, int from_tty)
 {
@@ -443,9 +448,7 @@ source_script (char *file, int from_tty)
   int is_python;
 
   if (file == NULL || *file == 0)
-    {
-      error (_("source command requires file name of file to source."));
-    }
+    error (_("source command requires file name of file to source."));
 
   file = tilde_expand (file);
   old_cleanups = make_cleanup (xfree, file);
@@ -464,7 +467,7 @@ source_script (char *file, int from_tty)
 
   if (fd == -1)
     {
-      if (from_tty)
+      if (from_tty > 0)
 	perror_with_name (file);
       else
 	{
@@ -479,6 +482,38 @@ source_script (char *file, int from_tty)
 
   stream = fdopen (fd, FOPEN_RT);
 
+  if (stream == NULL)
+    {
+      if (from_tty)
+	perror_with_name (file);
+      else
+	{
+	  do_cleanups (old_cleanups);
+	  return;
+	}
+    }
+
+#ifdef HAVE_GETUID
+  if (from_tty == -1)
+    {
+      struct stat statbuf;
+      if (fstat (fd, &statbuf) < 0)
+	{
+	  perror_with_name (file);
+	  fclose (stream);
+	  do_cleanups (old_cleanups);
+	  return;
+	}
+      if (statbuf.st_uid != getuid () || (statbuf.st_mode & S_IWOTH))
+	{
+	  warning ("not using untrusted file \"%s\"", file);
+	  fclose (stream);
+	  do_cleanups (old_cleanups);
+	  return;
+	}
+    }
+#endif
+
   if (is_python)
     source_python_script (stream, file);
   else
Index: gdb-6.8.50.20081120.python/gdb/main.c
===================================================================
--- gdb-6.8.50.20081120.python.orig/gdb/main.c	2008-11-25 16:16:41.000000000 -0500
+++ gdb-6.8.50.20081120.python/gdb/main.c	2008-11-27 16:54:37.000000000 -0500
@@ -762,7 +762,7 @@ Excess command line arguments ignored. (
 
       if (!inhibit_gdbinit)
 	{
-	  catch_command_errors (source_script, homeinit, 0, RETURN_MASK_ALL);
+	  catch_command_errors (source_script, homeinit, -1, RETURN_MASK_ALL);
 	}
 
       /* Do stats; no need to do them elsewhere since we'll only
@@ -850,7 +850,7 @@ Can't attach to process and specify a co
       || memcmp ((char *) &homebuf, (char *) &cwdbuf, sizeof (struct stat)))
     if (!inhibit_gdbinit)
       {
-	catch_command_errors (source_script, gdbinit, 0, RETURN_MASK_ALL);
+	catch_command_errors (source_script, gdbinit, -1, RETURN_MASK_ALL);
       }
 
   for (i = 0; i < ncmd; i++)
