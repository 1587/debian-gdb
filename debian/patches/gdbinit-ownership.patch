This patch was not popular upstream; there was no fundamental objection, but
several problems with the implementation.  It needs to be revisited.

Index: gdb-6.3.90.20051119/gdb/cli/cli-cmds.c
===================================================================
--- gdb-6.3.90.20051119.orig/gdb/cli/cli-cmds.c	2005-11-19 22:56:43.000000000 -0500
+++ gdb-6.3.90.20051119/gdb/cli/cli-cmds.c	2005-11-20 00:17:15.000000000 -0500
@@ -37,6 +37,7 @@
 #include "objfiles.h"
 #include "source.h"
 #include "disasm.h"
+#include "gdb_stat.h"
 
 #include "ui-out.h"
 
@@ -50,6 +51,8 @@
 #include "tui/tui.h"		/* For tui_active et.al.   */
 #endif
 
+#include <fcntl.h>
+
 /* Prototypes for local command functions */
 
 static void complete_command (char *, int);
@@ -420,30 +423,54 @@ cd_command (char *dir, int from_tty)
     pwd_command ((char *) 0, 1);
 }
 
+/* Load a GDB command file whose name is given in ARGS.  FROM_TTY may
+   be -1, in which case we are loading a gdbinit file; in that case,
+   be paranoid about unsafe files.  */
+
 void
 source_command (char *args, int from_tty)
 {
-  FILE *stream;
+  FILE *stream = NULL;
+  int fd;
   struct cleanup *old_cleanups;
   char *file = args;
 
   if (file == NULL)
-    {
-      error (_("source command requires pathname of file to source."));
-    }
+    error (_("source command requires pathname of file to source."));
 
   file = tilde_expand (file);
   old_cleanups = make_cleanup (xfree, file);
 
-  stream = fopen (file, FOPEN_RT);
-  if (!stream)
+  fd = open (file, O_RDONLY);
+  if (fd != -1)
+    stream = fdopen (fd, FOPEN_RT);
+  if (stream == NULL)
     {
-      if (from_tty)
+      if (from_tty > 0)
 	perror_with_name (file);
       else
 	return;
     }
 
+#ifdef HAVE_GETUID
+  if (from_tty == -1)
+    {
+      struct stat statbuf;
+      if (fstat (fd, &statbuf) < 0)
+	{
+	  perror_with_name (file);
+	  fclose (stream);
+	  return;
+	}
+      if (statbuf.st_uid != getuid () || (statbuf.st_mode & S_IWOTH))
+	{
+	  warning ("not using untrusted file \"%s\"", file);
+	  fclose (stream);
+	  return;
+	}
+    }
+#endif
+
   script_from_file (stream, file);
 
   do_cleanups (old_cleanups);
Index: gdb-6.3.90.20051119/gdb/main.c
===================================================================
--- gdb-6.3.90.20051119.orig/gdb/main.c	2005-11-14 10:53:06.000000000 -0500
+++ gdb-6.3.90.20051119/gdb/main.c	2005-11-20 00:14:13.000000000 -0500
@@ -638,7 +638,7 @@ extern int gdbtk_test (char *);
 
       if (!inhibit_gdbinit)
 	{
-	  catch_command_errors (source_command, homeinit, 0, RETURN_MASK_ALL);
+	  catch_command_errors (source_command, homeinit, -1, RETURN_MASK_ALL);
 	}
 
       /* Do stats; no need to do them elsewhere since we'll only
@@ -725,7 +725,7 @@ extern int gdbtk_test (char *);
       || memcmp ((char *) &homebuf, (char *) &cwdbuf, sizeof (struct stat)))
     if (!inhibit_gdbinit)
       {
-	catch_command_errors (source_command, gdbinit, 0, RETURN_MASK_ALL);
+	catch_command_errors (source_command, gdbinit, -1, RETURN_MASK_ALL);
       }
 
   for (i = 0; i < ncmd; i++)
Index: gdb-6.3.90.20051119/gdb/Makefile.in
===================================================================
--- gdb-6.3.90.20051119.orig/gdb/Makefile.in	2005-11-19 22:56:43.000000000 -0500
+++ gdb-6.3.90.20051119/gdb/Makefile.in	2005-11-20 00:14:13.000000000 -0500
@@ -2794,7 +2794,7 @@ cli-cmds.o: $(srcdir)/cli/cli-cmds.c $(d
 	$(expression_h) $(frame_h) $(value_h) $(language_h) $(filenames_h) \
 	$(objfiles_h) $(source_h) $(disasm_h) $(ui_out_h) $(top_h) \
 	$(cli_decode_h) $(cli_script_h) $(cli_setshow_h) $(cli_cmds_h) \
-	$(tui_h)
+	$(tui_h) $(gdb_stat_h)
 	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-cmds.c
 cli-decode.o: $(srcdir)/cli/cli-decode.c $(defs_h) $(symtab_h) \
 	$(gdb_regex_h) $(gdb_string_h) $(ui_out_h) $(cli_cmds_h) \
